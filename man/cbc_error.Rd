% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derror.R
\name{cbc_error}
\alias{cbc_error}
\title{Compute design error metrics for a choice experiment design}
\usage{
cbc_error(design, errors = "d", priors = NULL, profiles = NULL, exclude = NULL)
}
\arguments{
\item{design}{A \code{cbc_design} object created by \code{cbc_design()}.}

\item{errors}{Character vector specifying which error metrics to compute.
Options: "d" (D-error), "a" (A-error), "g" (G-error), "e" (E-error),
"all" (comprehensive metrics). Defaults to "d". When priors contain
random parameters, Bayesian versions are automatically computed.}

\item{priors}{A \code{cbc_priors} object created by \code{cbc_priors()}, or \code{NULL} for
null priors. If \code{x} is a \code{cbc_design} object, the priors from that object
will be used by default.}

\item{profiles}{A data frame of class \code{cbc_profiles} created using the
\code{cbc_profiles()} function.}

\item{exclude}{Character vector of attribute names to exclude from error
calculations}
}
\value{
For single error types ("d"), returns the numeric error value.
For multiple error types or "all", returns a list containing requested metrics.
}
\description{
This function computes design efficiency metrics for choice experiments.
By default, it returns only D-error, but can compute multiple optimality
criteria including D-, A-, G-, and E-error as well as condition numbers.
}
\details{
The different error criteria measure different aspects of design efficiency:
\itemize{
\item D-error: Minimizes generalized variance (determinant of covariance matrix)
\item A-error: Minimizes average variance (trace of covariance matrix)
\item G-error: Minimizes maximum prediction variance
\item E-error: Maximizes minimum eigenvalue (related to worst-estimated parameter)
}

\strong{Computational Approach}: The function automatically detects whether priors
contain random parameters (created with \code{rand_spec()}). If random parameters
are present, all error metrics are computed using a Bayesian approach that
averages results across parameter draws. If priors contain only fixed parameters,
standard (non-Bayesian) calculations are used.
}
\examples{
# Create profiles and design
profiles <- cbc_profiles(
  price = c(1, 2, 3),
  type = c("A", "B", "C")
)

design <- cbc_design(
  profiles = profiles,
  n_alts = 2,
  n_q = 4
)

# Compute D-error only (default)
d_error <- cbc_error(design)

# Compute comprehensive design error metrics
errors <- cbc_error(design, errors = "all")
print(errors)

# Compute specific error types
multiple_errors <- cbc_error(design, errors = c("d", "a", "g"))

# With random priors, Bayesian approach is automatically used
priors_random <- cbc_priors(
  profiles = profiles,
  price = rand_spec(dist = "n", mean = -0.5, sd = 0.2),
  type = c(0.2, 0.3)
)

# This will show message about Bayesian approach
bayesian_errors <- cbc_error(design, errors = c("d", "a"), priors = priors_random)
}
